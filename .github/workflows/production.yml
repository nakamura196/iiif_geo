name: Build and Deploy
on:
  push:
    branches: ["main"]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install openconnect ppa
        run: sudo add-apt-repository ppa:dwmw2/openconnect -y && sudo apt update

      - name: Install dependencies
        run: npm i

      - name: Static HTML export with Nuxt
        run: npm run generate:production

      - name: Compress dist
        run: tar -zcvf dist.tar.gz dist/*
      
      - name: Install openconnect and sshpass
        run: sudo apt install -y openconnect sshpass
      
      - name: Connect to VPN
        run: |
          echo "${{ secrets.VPN_PASSWORD }}" | sudo openconnect -u ${{ secrets.VPN_USERNAME }} --passwd-on-stdin --protocol=fortinet ${{ secrets.VPN_HOST }}:${{ secrets.VPN_PORT }} --background

      - name: Copy dist to server
        run: |
          sshpass -p ${{ secrets.SHIPS_PASSWORD }} scp -o StrictHostKeyChecking=no dist.tar.gz ${{ secrets.SHIPS_USERNAME }}@${{ secrets.SHIPS_HOST }}:${{secrets.SHIPS_TMP_DIR}}/dist.tar.gz

      - name: Unzip dist on server and copy to web directory
        run: |
          sshpass -p ${{ secrets.SHIPS_PASSWORD }} ssh ${{ secrets.SHIPS_USERNAME }}@${{ secrets.SHIPS_HOST }} "cd ${{secrets.SHIPS_TMP_DIR}} && tar -zxvf dist.tar.gz && cp -rp dist/* ${{secrets.SHIPS_DEPLOY_DIR}} && rm -rf dist.tar.gz dist"

      - name: Slack notification
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}